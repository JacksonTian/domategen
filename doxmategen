#!/usr/bin/env node

var util = require('util');
var path = require('path');
var fs = require('fs');
var ejs = require('ejs');
var ncp = require('ncp');
var execSync = require('child_process').execSync;

// args void of cmd
var args = process.argv.slice(2);

var repo = args[0];

if (!repo) {
  console.log('Usage: doxmategen <username/repository>');
  console.log('\teg. doxmategen JacksonTian/doxmate');
  process.exit(0);
}

var root = __dirname;

var output = '/Users/jacksontian/git/doxmategen_site';

var repoDir = path.join(root, 'repo', repo);

var repos = require('./repos.json');

var buildHomePage = function () {
  if (!repos[repo]) {
    repos[repo] = true;
    fs.writeFileSync('./repos.json', JSON.stringify(repos, null, 2));
    var template = fs.readFileSync('./index.html', 'utf8');
    fs.writeFileSync(path.join(output, 'index.html'), ejs.render(template, {repos: repos}));
  }

  ncp(path.join(__dirname + '/assets'), path.join(output, 'assets'), function () {});
};

buildHomePage();

if (!fs.existsSync(path.join(repoDir, '.git'))) {
  // clone it
  var clone = 'git clone git://github.com/%s.git %s';
  execSync(util.format(clone, repo, repoDir));
} else {
  // pull it
  var pull = 'git pull';
  execSync(pull, {
    cwd: repoDir
  });
}

var build = 'doxmate build -o %s';
execSync(util.format(build, path.join(output, repo)), {
  cwd: path.join(root, 'repo', repo)
});

var status = 'git status';
var result = execSync(status, {cwd: output, encoding: 'utf8'});
if (result.indexOf('nothing to commit') === -1) {
  var add = 'git add .';
  execSync(add, {cwd: output});
  var commit = util.format('git commit -m "update for repo: %s"', repo);
  execSync(commit, {cwd: output});
  var push = 'git push origin gh-pages';
  execSync(push, {cwd: output});
}
